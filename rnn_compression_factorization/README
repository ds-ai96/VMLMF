################################################################################
# Starlab RNN-compression with factorization method : Lowrank and group-lowrank rnn
#
# Author: Donghae Jang (jangdonghae@gmail.com), Seoul National University
#         U Kang (ukang@snu.ac.kr), Seoul National University
#
# Version : 1.0
# Date : Nov 10, 2020
# Main Contact: Donghae Jang
#
# This software is free of charge under research purposes.
# For commercial purposes, please contact the authors.
#
################################################################################


1. General information

This project is for Starlab RNN-compression which propose group-lowrank compression for RNN model,
and it's implementation for training and testing lowrank and group-lowrank compression for RNN model

2. How to run CTTP

IMPORTANT!
- First, check if pytorch, pandas, numpy, scipy is installed
- If you are Linux user, you can easily use shell script.
- If you are Windows user, you have to manually download dataset, and run the preprocess code

To run RNN-compression code in Linux
- First, run $bash preprocess.sh
  This shell script will download "Opportunity dataset" and "UCI HAR datset", and do a
  proper preprocessing
- Check if dataset is downloaded at ./src/data folder, and preprocessing is done
- Second, run $bash test_HAR.sh "HAR_deepconv" to check the result for the rnn-compression
  result on DeepConvolutionalLSTM model for the Opportunity dataset
- You can also run run $bash test_HAR.sh "HAR" to check the result for the rnn-compression
  result on basic LSTM model for the Opportunity dataset
- You can also run run $bash test_HAR.sh "UCI" to check the result for the rnn-compression
  result on basic LSTM model for the UCI HAR dataset

3. Rebuilding source codes

CTTP distribution includes the source code. You can modify the code and rebuild
the code. The source codes are in 'src' directory.
To do a manual experiment, check the code in test_HAR.sh file to learn the usage
of the test codes.

